#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=2

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
is_public=$(ynh_app_setting_get --app=$app --key=is_public)
port=$(ynh_app_setting_get --app=$app --key=port)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

# Convert is_public from "Yes"/"No" to 1 / 0
if [[ $is_public == "Yes" ]]; then
  is_public=1
elif [[ $is_public == "No" ]]; then
  is_public=0
fi
ynh_app_setting_set "$app" is_public "$is_public"

# Save the port used if not present
if ! [[ "$port" ]]; then
  port=8065
  ynh_app_setting_set "$app" port "$port"
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
  # Restore it if the upgrade fails
  ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=3

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
  ynh_script_progression --message="Upgrading source files..." --weight=2

  # Create a temporary directory
  tmpdir="$(mktemp -d)"

  # Backup the config file in the temp dir
  cp -a "$final_path/config/config.json" "$tmpdir/config.json"

  # Remove the app directory securely
  ynh_secure_remove --file="$final_path"

  # Download, check integrity, uncompress and patch the source from app.src
  ynh_setup_source --dest_dir="$final_path"

  # Copy the admin saved settings from tmp directory to final path  
  cp -a "$tmpdir/config.json" "$final_path/config/config.json" 

  # Remove the tmp directory securely
  ynh_secure_remove --file="$tmpdir"
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=5

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#ynh_script_progression --message="Installing dependencies..." --weight=10

#ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=2

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# SPECIFIC UPGRADE STEPS
#=================================================

# # Fix log FileLocation path (changed in Mattermost 3.8, makes Mattermost >= 4.2 crash)
# # https://docs.mattermost.com/administration/changelog.html#release-v3-8-3
# ynh_replace_string --match_string "\"FileLocation\": \"/var/log/mattermost.log\"" --replace_string "\"FileLocation\": \"/var/log\"" --target_file "$config_file"

# # Move log files to a directory (rather than directly in /var/log)
# # See https://github.com/YunoHost-Apps/mattermost_ynh/issues/61
# mkdir -p "$logs_path"
# ynh_replace_string --match_string "\"FileLocation\": \"/var/log\"" --replace_string "\"FileLocation\": \"$logs_path\"" --target_file "$config_file"
# if [ -f "/var/log/${app}.log" ]; then
#   mv "/var/log/${app}.log" "$logs_path/"
# fi

#=================================================
# RESTORE FILE PERMISSIONS
#=================================================

chown -R $app: $final_path
chown -R $app: "/home/yunohost.app/$app"
chown -R $app: "/var/log/$app"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="A short description of the app" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=2

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="systemd" --line_match="Started Mattermost"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
