#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

app=$YNH_APP_INSTANCE_NAME
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin_email=$YNH_APP_ARG_ADMIN_EMAIL
admin_password=$YNH_APP_ARG_ADMIN_PASSWORD
admin_locale=$YNH_APP_ARG_ADMIN_LOCALE
team_display_name=$YNH_APP_ARG_TEAM_DISPLAY_NAME
analytics=$YNH_APP_ARG_ANALYTICS

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=language --value=$language

#=================================================
# FIND AN AVAILABLE PORT
#=================================================
ynh_script_progression --message="Configuring firewall..." --time --weight=1

# Find an available port
port=$(ynh_find_port --port=8065)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# SET UP INSTALLATION VARIABLES
#=================================================

root_path="$(pwd)/.."
data_path="/home/yunohost.app/$app"
logs_path="/var/log/$app"

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --time --weight=1

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# CREATE USER FOR EMAIL NOTIFICATIONS
#=================================================

mattermost_user="$app"
mattermost_user_password=$(ynh_string_random --length=24)
useradd -M --shell /bin/false -p $(openssl passwd -1 "$mattermost_user_password") "$mattermost_user"
ynh_app_setting_set "$app" smtppwd "$mattermost_user_password"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --time --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

mkdir -p "$data_path"
mkdir -p "$logs_path"

#=================================================
# EDIT MATTERMOST CONFIG
#=================================================

# Configure Service Settings
ynh_replace_string --match_string "\"SiteURL\": \"\""                 --replace_string "\"SiteURL\": \"https://${domain}${path_url}\""     --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"ListenAddress\": \".*\""         --replace_string "\"ListenAddress\": \"127.0.0.1:${port}\""          --target_file $final_path/config/config.json
# Configure the database connection
db_connection_url="${db_user}:${db_password}@tcp(127.0.0.1:3306)/${db_name}?charset=utf8mb4,utf8"
ynh_replace_string --match_string "\"DataSource\": \".*\""            --replace_string "\"DataSource\": \"${db_connection_url}\""          --target_file $final_path/config/config.json
# Configure uploaded files directory
ynh_replace_string --match_string "\"Directory\": \"./data/\""        --replace_string "\"Directory\": \"${data_path}/\""                  --target_file $final_path/config/config.json
# Configure SMTP account for sending email notifications
ynh_replace_string --match_string "\"SendEmailNotifications\": false" --replace_string "\"SendEmailNotifications\": true"                  --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"FeedbackName\": \"\""            --replace_string "\"FeedbackName\": \"Mattermost notification\""     --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"FeedbackEmail\": \"\""           --replace_string "\"FeedbackEmail\": \"no-reply@${domain}\""         --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"SMTPUsername\": \"\""            --replace_string "\"SMTPUsername\": \"${mattermost_user}\""          --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"SMTPPassword\": \"\""            --replace_string "\"SMTPPassword\": \"${mattermost_user_password}\"" --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"SMTPServer\": \"\""              --replace_string "\"SMTPServer\": \"localhost\""                     --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"SMTPPort\": \".*\""              --replace_string "\"SMTPPort\": \"25\""                              --target_file $final_path/config/config.json
# Disable Mattermost debug console by default
ynh_replace_string --match_string "\"EnableConsole\": true"           --replace_string "\"EnableConsole\": false"                          --target_file $final_path/config/config.json
# Configure log file location
ynh_replace_string --match_string "\"FileLocation\": \"\""            --replace_string "\"FileLocation\": \"$logs_path\""                  --target_file $final_path/config/config.json
# Disable questionable password complexity rules
ynh_replace_string --match_string "\"MinimumLength\": 10"             --replace_string "\"MinimumLength\": 8"                              --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"Lowercase\": true"               --replace_string "\"Lowercase\": false"                              --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"Number\": true"                  --replace_string "\"Number\": false"                                 --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"Uppercase\": true"               --replace_string "\"Uppercase\": false"                              --target_file $final_path/config/config.json
ynh_replace_string --match_string "\"Symbol\": true"                  --replace_string "\"Symbol\": false"                                 --target_file $final_path/config/config.json
# Configure analytics according to user choice
if [ $analytics -eq 0 ]; then
    ynh_replace_string --match_string "\"EnableDiagnostics\": true"   --replace_string "\"EnableDiagnostics\": false"                      --target_file $final_path/config/config.json
fi
ynh_app_setting_set "$app" analytics "$analytics"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chown -R "$mattermost_user:www-data" "$final_path"
chown -R "$mattermost_user:www-data" "$data_path"
chown -R "$mattermost_user:adm"      "$logs_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --time --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --time --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --time --weight=1

yunohost service add $app --description="A short description of the app" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=2

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="systemd" #--line_match="HTTP Server listening"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=1

if [ $is_public -eq 1 ]
then
  ynh_permission_update --permission "main" --add "visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=2

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# CREATE ADMIN AND FIRST TEAM
#=================================================

admin_username=$(cut -d @ -f 1 <<< "$admin_email")
team_name=$(echo "$team_display_name" | iconv -f utf8 -t ascii//TRANSLIT//IGNORE | sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z)

cd "$final_path/bin"
./mattermost user create --username "$admin_username" --email "$admin_email" --password "$admin_password" --locale "$admin_locale" --system_admin
./mattermost user verify "$admin_username"
./mattermost team create --name "$team_name" --display_name "$team_display_name" --email "$admin_email"
./mattermost team add "$team_name" "$admin_username"

ynh_app_setting_set "$app" admin_email "$admin_email"
ynh_app_setting_set "$app" admin_locale "$admin_locale"
ynh_app_setting_set "$app" team_name "$team_name"
